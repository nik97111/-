Урок 6. Принципы построения приложений «чистая архитектура»
Разработать полную ERD домена приложения автоматизации работы поликлиники.
Разработать UseCase диаграмму пациента и доктора в приложении автоматизации работы поликлиники.

Урок 7. Типа архитектур WEB-приложений: MPA, SPA.
Доработать экранные формы интерфейса.
Разработать полную ERD домена.
Разработать диаграмму компонент в UML, включая слои пользовательского интерфейса и бизнес-логики.

Урок 8. Типы архитектур прикладных приложений (мобильные): MVC, MVP, MVVM.
Для приложения заказа столика в ресторане сделать архитектурные документы:
1) Разработать экранные формы интерфейса(UI/UX).
2) Разработать полную ERD домена.
3) Разработать UML диаграмму классов.

Урок 9. Способы организации передачи данных между компонентами приложения, протоколы и API. REST, gRPC, очереди
Подготовить архитектурные документы к проекту заказа ресурсов в облаке:
1) Разработать экранные формы интерфейса для заказа ресурсов в облачном сервисе.
2) Разработать полную ERD домена.

Урок 10. Структура приложения с пользовательским интерфейсом и базой данных (паттерн Repository)
1) Разработать UseCase диаграмму для приложения управления роботом пылесосом.
2) Разработать UI/UX мобильного приложения управления роботом пылесосом.

Урок 11. Сервис-ориентированные архитектуры
Для проекта системы управления роботом-пылесосом разработать:
1) ERD диаграмму данных хранимых в облаке.
2) OPENAPI команды PUT, GET, DELETE, POST для сущностей User, Group, Robot, Shedule(только не хватающие команды. Файл с openApi приложен к материалам семинара).
3) Доделать UML диаграмму микро сервиса аутентификации на основе токенов безопасности.

Урок 12. Принципы тестирования приложений
Разработать тесты под проекта системы управления роботом пылесосом(достаточно один протокол):
1) Предложить и разработать E2E тесты https://www.postman.com/ или аналоги.
2) Предложить и разработать приёмочные тесты (UAT) для сценариев Use case https://www.gurock.com/testrail/ или аналоги.