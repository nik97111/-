Урок 1. Погружение в Objective-C
Задание
Решить квадратные уравнения:
x^2 – 8x + 12 = 0,
12x^2 – 4x + 2 = 0,
x^2 – 100x - 2 = 0
(заменять константы в коде).

Создать программу, которая находит большее число среди 3-х чисел.


Урок 2. Объекты. Наследование, инкапсуляция и полиморфизм в Objective-C
Задание
Создать абстрактный класс Figure с методами вычисления площади и периметра, а также методом, выводящим информацию о фигуре на экран.

Создать производные классы: Rectangle (прямоугольник), Circle (круг), Triangle (треугольник) со своими методами вычисления площади и периметра.

Создать массив n-фигур и вывести полную информацию о фигурах на экран.



Урок 3. Работа с памятью в Objective-C, ARC и MRC
Написать классы Doctor (Доктор) и Patient (Пациент). Доктор делегирует пациенту выпить пилюлю. Пациент по указанию доктора ее выпивает. Требуется реализовать взаимодействие доктора и пациента через делегат.
См. пример во вложенных материалах к уроку


Урок 4. Блоки и многопоточное программирование в Objective-C
Задание
Реализовать класс робота (Robot). В классе должны быть свойства координат x, y (по умолчанию 0, 0) и метод run. Метод run принимает единственный параметр - блок, в зависимости от сообщения, возвращаемого из блока (up, down, left, right) робот движется в соответствующем направлении (изменяются его текущие координаты x, y). Гарантируется, что блок возвращает только строки вида (up, down, left, right).
Продемонстрировать движение робота по прямоугольной системе координат.


Урок 5. Работа с сетью в Objective-C
Задание
На основе проекта из урока сделать мобильное приложение с двумя экранами:
1. На первом экране приложения отображение GET-запроса в TextView элементе.
2. На втором экране реализовать два TextField и одну Button. При нажатии на кнопку реализовать передачу данных по методу POST.


Урок 6. Работа с файлами. Обработка ошибок. Objective-C Runtime. Жизненный цикл UIViewController
Задание
Написать класс Робот со свойствами: x, y, name. Координаты и имя соответственно.
Cоздать на первом экране три TextField - два для записи координат, один для имени, и Button - кнопка для подвтерждения ввода. Необходимо сохранить в userDefaults объект робота из информации введенной пользователем в TextFiled и считать из него, вывести в TextView (или в консоль при технических сложностях).
Создать второй экран, с таким же набором элементов как на первом экране, но сохранить информацию о роботе в файл с названием таким же как имя робота и считать содержимое файла, отобразить в TextView (или в консоль при технических сложностях).