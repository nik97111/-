//
//  Robot.h
//  Solution_6
//
//  Created by Николай Чупреев on 28.01.2024.
//



// Задание
// 1. Написать класс Робот со свойствами: x, y, name. Координаты и имя соответственно.
// 2. Cоздать на первом экране три TextField - два для записи координат, один для имени, и Button - кнопка для подвтерждения ввода. Необходимо сохранить в userDefaults объект робота из информации введенной пользователем в TextFiled и считать из него, вывести в TextView (или в консоль при технических сложностях).
// 3. Создать второй экран, с таким же набором элементов как на первом экране, но сохранить информацию о роботе в файл с названием таким же как имя робота и считать содержимое файла, отобразить в TextView (или в консоль при технических сложностях).





#import <Foundation/Foundation.h>
//#import <UIKit/UIKit.h>

NS_ASSUME_NONNULL_BEGIN

// Например, нужно сохранить объект класса (не базового типа(базовые типы - int, string, float, double)). Это невозможно сделать без каких-либо изменений, его нужно сериализовать (например, при работе с JSON-файлом). Сериализация - процесс перевода какого-то объекта в бинарыые данные, десериализация - перевод из бинарных данных в какой-то объект, например, словарь.

// Чтобы сериализовать класс Robot, подписываем его под протокол <NSCoding>
@interface Robot : NSObject <NSCoding>

// 1.1
// 1. Написать класс Робот со свойствами: x, y, name. Координаты и имя соответственно.

// Создаем свойство - координата х
// Изначально устанавливается ключевое имя @property, которое дает компилятору знать, что будет объявлено свойство. Затем устанавливаются атрибуты (в скобках). После этого указывается тип свойства - int и его имя - x.
@property (nonatomic, assign) int x;

// Создаем свойство - координата y
@property (nonatomic, assign) int y;

// Создаем свойство с именем name
@property (nonatomic, strong) NSString *name;

// Объявляем инициализатор (возвращает - instancetype (самого себя - объект)), чтобы передать точку и цвет. Название инициализатора - initWithPoint. Первый параметр называется по имени инициализатора - initWithX и имеет тип float, название - x (внутреннее название параметра), второй параметр - внешний параметр: y, тип данных float, название - y (внутреннее название параметра), третий параметр - внешний параметр: name, тип данных (NSString * (ссылочный)), название - name
- (instancetype)initWithX:(float)x y:(float)y name:(NSString *)name;


@end

NS_ASSUME_NONNULL_END
