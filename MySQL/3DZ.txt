Выполнение
Часть 1:
Создаем новую базу `Seminar_3_DZ`
CREATE SCHEMA `Seminar_3_DZ`;

Создаем таблицу salespeople и заполняем еe:
create table salespeople
(
snum Int Primary Key Not Null,
sname Varchar(45) Not Null,
city Varchar(45) Not Null,
comm Varchar(20) Not Null
);

Insert salespeople 
Values
(1001, 'Peel', 'london', '.12'),
(1002, 'Serres', 'San Jose', '.13'),
(1004, 'Motika', 'london', '.11'),
(1007, 'Rifkin', 'Barcelona', '.15'),
(1003, 'Axelrod', 'New York', '.10');


Создаем таблицу customers и заполняем еe:
CREATE TABLE customers
(
	cnum INT PRIMARY KEY NOT NULL,
	cname VARCHAR(45) NOT NULL,
	city VARCHAR(45) NOT NULL,
	rating INT NOT NULL,
	snum INT,
	FOREIGN KEY (cnum)
	REFERENCES salespeople (snum)
);

INSERT customers
VALUES
	(2001, 'Hoffman', 'london', 100, 1001),
	(2002, 'Giovanni', 'Rome', 200, 1003),
	(2003, 'Lin', 'San Jose', 200, 1002),
	(2004, 'Grass', 'Berlin', 300, 1002),
	(2006, 'Clemens', 'london', 100, 1001),
	(2008, 'Cisneros', 'San Jose', 300, 1007),
	(2007, 'Pereira', 'Rome', 100, 1004);


1. Напишите запрос, который вывел бы таблицу со столбцами в следующем порядке: city, sname, snum, comm. (к первой или второй таблице, используя SELECT)
SELECT city, sname, snum, comm 
FROM salespeople;


2. Напишите команду SELECT, которая вывела бы оценку(rating), сопровождаемую именем каждого заказчика в городе San Jose. (“заказчики”)
SELECT rating, cname 
FROM customers 
WHERE city = 'San Jose';


3. Напишите запрос, который вывел бы значения snum всех продавцов из таблицы заказов без каких бы то ни было повторений (уникальные значения в “snum“ “Продавцы”).
SELECT DISTINCT snum 
FROM salespeople 
ORDER BY snum;


4*. Напишите запрос, который бы выбирал заказчиков, чьи имена начинаются с буквы G. Используется оператор "LIKE": (“заказчики”) https://dev.mysql.com/doc/refman/8.0/en/string-comparison-functions.html
SELECT * 
FROM customers 
WHERE cname LIKE "%G%";

или только фамилии заказчиков:
SELECT cname 
FROM customers 
WHERE cname LIKE "%G%";


5.
Создаем таблицу orders и заполняем еe:
CREATE TABLE orders
(
	onum INT PRIMARY KEY NOT NULL,
	amt FLOAT NOT NULL,
	odate DATE NOT NULL,
	cnum INT NOT NULL,
	snum INT NOT NULL
);

INSERT orders
VALUES
	(3001, 18.69, "1990-03-10", 2008, 1007),
	(3003, 767.19, "1990-03-10", 2001, 1001),
	(3002, 1900.10, "1990-03-10", 2007, 1004),
	(3005, 5160.45, "1990-03-10", 2003, 1002),
	(3006, 1098.16, "1990-03-10", 2008, 1007),
	(3009, 1713.23, "1990-04-10", 2002, 1003),
	(3007, 75.75, "1990-04-10", 2004, 1002),
	(3008, 4723.00, "1990-05-10", 2006, 1001),
	(3010, 1309.95, "1990-06-10", 2004, 1002),
	(3011, 9891.88, "1990-06-10", 2006, 1001);


Напишите запрос, который может дать вам все заказы со значениями суммы выше чем $1,000. (“Заказы”, “amt” - сумма)
SELECT *  
FROM orders 
WHERE amt > 1000;

6. Напишите запрос который выбрал бы наименьшую сумму заказа (Из поля “amt” - сумма в таблице “Заказы” выбрать наименьшее значение).
SELECT min(amt) 
FROM orders;
или
SELECT 
MIN(amt) AS min
FROM orders;


7. Напишите запрос к таблице “Заказчики”, который может показать всех заказчиков, у которых рейтинг больше 100 и они находятся не в Риме.
SELECT cname 
FROM customers 
WHERE rating > 100 AND NOT city = 'Rome';


Часть 2:
Создаем таблицу employee и заполняем еe:
CREATE TABLE employee 
(
	id INT, 
    NAME VARCHAR(100), 
    surname VARCHAR(100), 
    specialty VARCHAR(100), 
    seniority INT, 
    salary INT, 
    age INT
    );

INSERT employee
VALUES (1,'Вася', 'Васькин', 'начальник', 40, 100000, 60),
(2,'Петя', 'Петькин', 'начальник', 8, 70000, 30),
(3,'Катя', 'Каткина', 'инженер', 2, 70000, 25),
(4,'Саша', 'Сашкин', 'инженер', 12, 50000, 35),
(5,'Иван', 'Иванов', 'рабочий', 40, 30000, 59),
(6,'Петр', 'Петров', 'рабочий', 20, 25000, 40),
(7,'Сидор', 'Сидоров', 'рабочий', 10, 20000, 35),
(8,'Антон', 'Антонов', 'рабочий', 8, 19000, 28),
(9,'Юра', 'Юркин', 'рабочий', 5, 15000, 25),
(10,'Максим', 'Воронин', 'рабочий', 2, 11000, 22),
(11,'Юра', 'Галкин', 'рабочий', 3, 12000, 24),
(12,'Люся', 'Люськина', 'рабочий', 10, 10000, 49);

8. Отсортируйте поле “зарплата” в порядке убывания
SELECT salary
FROM employee
ORDER BY salary DESC;

Отсортируйте поле “зарплата” в порядке возрастания
SELECT salary
FROM employee;
или
SELECT salary
FROM employee
ORDER BY salary ASC;


9. Отсортируйте по возрастанию поле “Зарплата” и выведите 5 строк с наибольшей заработной платой (возможен подзапрос).
По неизвестной причине количество строк удваивается, поэтому в запросе пишу 10 вместо 5.
Полные данные по запросу:
SELECT *
FROM (
SELECT *
FROM employee
ORDER BY salary DESC
LIMIT 10) T
ORDER BY salary;

Только зарплата:
SELECT *
FROM (
SELECT salary
FROM employee
ORDER BY salary DESC
LIMIT 10) T
ORDER BY salary;


10. Выполните группировку всех сотрудников по специальности, суммарная зарплата которых превышает 100000.
SELECT specialty, sum(salary) 
FROM employee 
GROUP BY specialty HAVING sum(salary) > 100000;
по неизвестной причине сумма удвоилась.

